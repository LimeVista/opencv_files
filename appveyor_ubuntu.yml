version: 1.0.{build}

image: 
  - Ubuntu1804

init:
- ps: |
    Write-Host "APPVEYOR = "$env:APPVEYOR
    Write-Host "CI = "$env:CI
    Write-Host "APPVEYOR_API_URL = "$env:APPVEYOR_API_URL
    Write-Host "APPVEYOR_ACCOUNT_NAME = "$env:APPVEYOR_ACCOUNT_NAME
    Write-Host "APPVEYOR_PROJECT_ID = "$env:APPVEYOR_PROJECT_ID
    Write-Host "APPVEYOR_PROJECT_NAME = "$env:APPVEYOR_PROJECT_NAME
    Write-Host "APPVEYOR_PROJECT_SLUG = "$env:APPVEYOR_PROJECT_SLUG
    Write-Host "APPVEYOR_BUILD_FOLDER = "$env:APPVEYOR_BUILD_FOLDER
    Write-Host "APPVEYOR_BUILD_ID = "$env:APPVEYOR_BUILD_ID
    Write-Host "APPVEYOR_BUILD_NUMBER = "$env:APPVEYOR_BUILD_NUMBER
    Write-Host "APPVEYOR_BUILD_VERSION = "$env:APPVEYOR_BUILD_VERSION
    Write-Host "APPVEYOR_BUILD_WORKER_IMAGE = "$env:APPVEYOR_BUILD_WORKER_IMAGE
    Write-Host "APPVEYOR_PULL_REQUEST_NUMBER = "$env:APPVEYOR_PULL_REQUEST_NUMBER
    Write-Host "APPVEYOR_PULL_REQUEST_TITLE = "$env:APPVEYOR_PULL_REQUEST_TITLE
    Write-Host "APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME = "$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME
    Write-Host "APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH = "$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH
    Write-Host "APPVEYOR_PULL_REQUEST_HEAD_COMMIT = "$env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT
    Write-Host "APPVEYOR_JOB_ID = "$env:APPVEYOR_JOB_ID
    Write-Host "APPVEYOR_JOB_NAME = "$env:APPVEYOR_JOB_NAME
    Write-Host "APPVEYOR_JOB_NUMBER = "$env:APPVEYOR_JOB_NUMBER
    Write-Host "APPVEYOR_REPO_PROVIDER = "$env:APPVEYOR_REPO_PROVIDER
    Write-Host "APPVEYOR_REPO_SCM = "$env:APPVEYOR_REPO_SCM
    Write-Host "APPVEYOR_REPO_NAME = "$env:APPVEYOR_REPO_NAME
    Write-Host "APPVEYOR_REPO_BRANCH = "$env:APPVEYOR_REPO_BRANCH
    Write-Host "APPVEYOR_REPO_TAG = "$env:APPVEYOR_REPO_TAG
    Write-Host "APPVEYOR_REPO_TAG_NAME = "$env:APPVEYOR_REPO_TAG_NAME
    Write-Host "APPVEYOR_REPO_COMMIT = "$env:APPVEYOR_REPO_COMMIT
    Write-Host "APPVEYOR_REPO_COMMIT_AUTHOR = "$env:APPVEYOR_REPO_COMMIT_AUTHOR
    Write-Host "APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL = "$env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL
    Write-Host "APPVEYOR_REPO_COMMIT_TIMESTAMP = "$env:APPVEYOR_REPO_COMMIT_TIMESTAMP
    Write-Host "APPVEYOR_REPO_COMMIT_MESSAGE = "$env:APPVEYOR_REPO_COMMIT_MESSAGE
    Write-Host "APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED = "$env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED
    Write-Host "APPVEYOR_SCHEDULED_BUILD = "$env:APPVEYOR_SCHEDULED_BUILD
    Write-Host "PLATFORM = "$env:PLATFORM
    Write-Host "CONFIGURATION = "$env:CONFIGURATION

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

before_build:
  - sh: pwd
  - sh: cd $APPVEYOR_BUILD_FOLDER
  - git submodule update --init --recursive

install:
  - sh: pwd
  - sh: sudo apt update
  - sh: sudo apt -y remove x264 libx264-dev
  - sh: sudo apt -y install build-essential checkinstall cmake pkg-config yasm
  - sh: sudo apt -y install git gfortran
  - sh: sudo apt -y install libjpeg8-dev libpng-dev 
  - sh: sudo apt -y install software-properties-common
  - sh: sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
  - sh: sudo apt -y update 
  - sh: sudo apt -y install libjasper1
  - sh: sudo apt -y install libtiff-dev 
  - sh: sudo apt -y install libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev
  - sh: sudo apt -y install libxine2-dev libv4l-dev
  - sh: cd /usr/include/linux
  - sh: sudo ln -s -f ../libv4l1-videodev.h videodev.h
  - sh: cd $APPVEYOR_BUILD_FOLDER
  - sh: sudo apt -y install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
  - sh: sudo apt -y install libgtk2.0-dev libtbb-dev qt5-default
  - sh: sudo apt -y install libatlas-base-dev
  - sh: sudo apt -y install libfaac-dev libmp3lame-dev libtheora-dev
  - sh: sudo apt -y install libvorbis-dev libxvidcore-dev
  - sh: sudo apt -y install libopencore-amrnb-dev libopencore-amrwb-dev
  - sh: sudo apt -y install libavresample-dev
  - sh: sudo apt -y install x264 v4l-utils
  - sh: sudo apt -y install libwebp-dev
  - sh: sudo apt -y install tesseract-ocr libtesseract-dev libleptonica-dev

build_script:
  - sh: cd ${APPVEYOR_BUILD_FOLDER}/opencv
  - sh: mkdir build
  - sh: cd build
  - sh: cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=${APPVEYOR_BUILD_FOLDER}/build -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_DOCS=OFF -D BUILD_EXAMPLES=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_opencv_apps=OFF -D BUILD_opencv_datasets=OFF -D BUILD_opencv_java_bindings_generator=OFF -D BUILD_opencv_python_bindings_generator=OFF -D BUILD_opencv_ts=OFF -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=OFF -D WITH_OPENGL=ON -D OPENCV_ENABLE_NONFREE=ON -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules -D BUILD_SHARED_LIBS=OFF ..
  - sh: make -j4
  - sh: make install
  - sh: cd ${APPVEYOR_BUILD_FOLDER}
  - sh: tar czf OpenCV_Ubuntu1804.tgz build

artifacts: 
  - path: build/
    name: OpenCV_Ubuntu1804
    type: zip
  - path: OpenCV_Ubuntu1804.tgz
    name: OpenCV_Ubuntu1804_TGZ
